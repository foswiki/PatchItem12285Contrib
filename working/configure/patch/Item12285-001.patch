commit b4d14632bd9e00e2edb11e2da358cdf4d1cf47cd
commit ab616fbb6d95c450ec7d248a00fffcd90e32a71a
Author: GeorgeClark <GeorgeClark@0b4bb1d4-4e5a-0410-9cc4-b2b747904278>
Date:   Mon Dec 10 00:49:20 2012 +0000

    Item12285: Better validations
    
    git-svn-id: http://svn.foswiki.org/trunk@16178 0b4bb1d4-4e5a-0410-9cc4-b2b747904278

~~~PATCH 72c86f0c71519caf6d26efbe174739f6  lib/Foswiki/Macros/MAKETEXT.pm (Foswiki 1.1.0 - Foswiki 1.1.2)
--- MAKETEXT.pm.orig	2012-12-09 20:20:07.865197810 -0500
+++ MAKETEXT.pm	2012-12-10 16:58:03.651591792 -0500
@@ -4,9 +4,18 @@
 use strict;
 use warnings;
 
+use Locale::Maketext;
+my $escape =
+  ( $Foswiki::cfg{UserInterfaceInternationalisation}
+      && ( Locale::Maketext->VERSION() < 1.23 ) );
+
 sub MAKETEXT {
     my ( $this, $params ) = @_;
 
+    my $max;
+    my $min;
+    my $param_error;
+
     my $str = $params->{_DEFAULT} || $params->{string} || "";
     return "" unless $str;
 
@@ -18,20 +27,24 @@
     $str =~ s/~~\[/~[/g;
     $str =~ s/~~\]/~]/g;
 
+    $max         = 0;
+    $min         = 1;
+    $param_error = 0;
+
     # unescape parameters and calculate highest parameter number:
-    my $max = 0;
-    $str =~ s/~\[(\_(\d+))~\]/ $max = $2 if ($2 > $max); "[$1]"/ge;
+    $str =~ s/~\[(\_(\d+))~\]/_validate($1, $2, $max, $min, $param_error)/ge;
     $str =~
-s/~\[(\*,\_(\d+),[^,]+(,([^,]+))?)~\]/ $max = $2 if ($2 > $max); "[$1]"/ge;
+s/~\[(\*,\_(\d+),[^,]+(,([^,]+))?)~\]/ _validate($1, $2, $max, $min, $param_error, $escape)/ge;
+    return $str if ($param_error);
 
     # get the args to be interpolated.
     my $argsStr = $params->{args} || "";
 
     my @args = split( /\s*,\s*/, $argsStr );
 
-    # fill omitted args with zeros
+    # fill omitted args with empty strings
     while ( ( scalar @args ) < $max ) {
-        push( @args, 0 );
+        push( @args, '' );
     }
 
     # do the magic:
@@ -47,6 +60,35 @@
     return $result;
 }
 
+sub _validate {
+
+    $_[2] = $_[1] if ( $_[1] > $_[2] );    # Record maximum param number
+    $_[3] = $_[1] if ( $_[1] < $_[3] );    # Record minimum param number
+
+    if ( $_[1] > 100 ) {
+        $_[4] = 1;                         # Set error flag
+        return
+"<span class=\"foswikiAlert\">Excessive parameter number $_[2], MAKETEXT rejected.</span>";
+    }
+    if ( $_[1] < 1 ) {
+        $_[4] = 1;                         # Set error flag
+        return
+"<span class=\"foswikiAlert\">Invalid parameter <code>\"$_[0]\"</code>, MAKETEXT rejected.</span>";
+    }
+
+    if ( $_[5] ) {
+
+        # Escape any escapes.
+        my $str = $_[0];                   # copy to allow modification
+        $str =~ s#\\#\\\\#g;               # escape any escapes
+        return "[$str]";
+    }
+    else {
+        return
+          "[$_[0]]";    # Return the complete bracket parameter without escapes
+    }
+}
+
 1;
 __END__
 Foswiki - The Free and Open Source Wiki, http://foswiki.org/

~~~PATCH e7d32c175961f232a523ebcc3b45310f  lib/Foswiki/Macros/MAKETEXT.pm (Foswiki-1.1.0 - Foswiki-1.1.2 Patched)
--- MAKETEXT.pm	2012-12-10 11:18:32.932577919 -0500
+++ MAKETEXT.pm	2012-12-10 16:58:03.651591792 -0500
@@ -9,13 +9,13 @@
   ( $Foswiki::cfg{UserInterfaceInternationalisation}
       && ( Locale::Maketext->VERSION() < 1.23 ) );
 
-my $max;
-my $min;
-my $param_error;
-
 sub MAKETEXT {
     my ( $this, $params ) = @_;
 
+    my $max;
+    my $min;
+    my $param_error;
+
     my $str = $params->{_DEFAULT} || $params->{string} || "";
     return "" unless $str;
 
@@ -32,20 +32,19 @@
     $param_error = 0;
 
     # unescape parameters and calculate highest parameter number:
-    $str =~ s/~\[(\_(\d+))~\]/_validate($1, $2)/ge;
-    $str =~ s/~\[(\*,\_(\d+),[^,]+(,([^,]+))?)~\]/ _validate($1, $2)/ge;
+    $str =~ s/~\[(\_(\d+))~\]/_validate($1, $2, $max, $min, $param_error)/ge;
+    $str =~
+s/~\[(\*,\_(\d+),[^,]+(,([^,]+))?)~\]/ _validate($1, $2, $max, $min, $param_error, $escape)/ge;
     return $str if ($param_error);
 
-    $str =~ s#\\#\\\\#g if $escape;
-
     # get the args to be interpolated.
     my $argsStr = $params->{args} || "";
 
     my @args = split( /\s*,\s*/, $argsStr );
 
-    # fill omitted args with zeros
+    # fill omitted args with empty strings
     while ( ( scalar @args ) < $max ) {
-        push( @args, 0 );
+        push( @args, '' );
     }
 
     # do the magic:
@@ -62,19 +61,32 @@
 }
 
 sub _validate {
-    $max = $_[1] if ( $_[1] > $max );
-    $min = $_[1] if ( $_[1] < $min );
+
+    $_[2] = $_[1] if ( $_[1] > $_[2] );    # Record maximum param number
+    $_[3] = $_[1] if ( $_[1] < $_[3] );    # Record minimum param number
+
     if ( $_[1] > 100 ) {
-        $param_error = 1;
+        $_[4] = 1;                         # Set error flag
         return
-"<span class=\"foswikiAlert\">Excessive parameter number $max, MAKETEXT rejected.</span>";
+"<span class=\"foswikiAlert\">Excessive parameter number $_[2], MAKETEXT rejected.</span>";
     }
     if ( $_[1] < 1 ) {
-        $param_error = 1;
+        $_[4] = 1;                         # Set error flag
         return
 "<span class=\"foswikiAlert\">Invalid parameter <code>\"$_[0]\"</code>, MAKETEXT rejected.</span>";
     }
-    return "[$_[0]]";
+
+    if ( $_[5] ) {
+
+        # Escape any escapes.
+        my $str = $_[0];                   # copy to allow modification
+        $str =~ s#\\#\\\\#g;               # escape any escapes
+        return "[$str]";
+    }
+    else {
+        return
+          "[$_[0]]";    # Return the complete bracket parameter without escapes
+    }
 }
 
 1;

~~~PATCH 160f04fc478c5f9b81d2ef6c9e614074  lib/Foswiki/Macros/MAKETEXT.pm (Foswiki 1.1.3 - Foswiki 1.1.6)
--- lib/Foswiki/Macros/MAKETEXT.pm.orig	2012-12-09 20:23:52.457636561 -0500
+++ lib/Foswiki/Macros/MAKETEXT.pm	2012-12-10 16:58:03.651591792 -0500
@@ -4,9 +4,18 @@
 use strict;
 use warnings;
 
+use Locale::Maketext;
+my $escape =
+  ( $Foswiki::cfg{UserInterfaceInternationalisation}
+      && ( Locale::Maketext->VERSION() < 1.23 ) );
+
 sub MAKETEXT {
     my ( $this, $params ) = @_;
 
+    my $max;
+    my $min;
+    my $param_error;
+
     my $str = $params->{_DEFAULT} || $params->{string} || "";
     return "" unless $str;
 
@@ -18,11 +27,15 @@
     $str =~ s/~~\[/~[/g;
     $str =~ s/~~\]/~]/g;
 
+    $max         = 0;
+    $min         = 1;
+    $param_error = 0;
+
     # unescape parameters and calculate highest parameter number:
-    my $max = 0;
-    $str =~ s/~\[(\_(\d+))~\]/ $max = $2 if ($2 > $max); "[$1]"/ge;
+    $str =~ s/~\[(\_(\d+))~\]/_validate($1, $2, $max, $min, $param_error)/ge;
     $str =~
-s/~\[(\*,\_(\d+),[^,]+(,([^,]+))?)~\]/ $max = $2 if ($2 > $max); "[$1]"/ge;
+s/~\[(\*,\_(\d+),[^,]+(,([^,]+))?)~\]/ _validate($1, $2, $max, $min, $param_error, $escape)/ge;
+    return $str if ($param_error);
 
     # get the args to be interpolated.
     my $argsStr = $params->{args} || "";
@@ -47,6 +60,35 @@
     return $result;
 }
 
+sub _validate {
+
+    $_[2] = $_[1] if ( $_[1] > $_[2] );    # Record maximum param number
+    $_[3] = $_[1] if ( $_[1] < $_[3] );    # Record minimum param number
+
+    if ( $_[1] > 100 ) {
+        $_[4] = 1;                         # Set error flag
+        return
+"<span class=\"foswikiAlert\">Excessive parameter number $_[2], MAKETEXT rejected.</span>";
+    }
+    if ( $_[1] < 1 ) {
+        $_[4] = 1;                         # Set error flag
+        return
+"<span class=\"foswikiAlert\">Invalid parameter <code>\"$_[0]\"</code>, MAKETEXT rejected.</span>";
+    }
+
+    if ( $_[5] ) {
+
+        # Escape any escapes.
+        my $str = $_[0];                   # copy to allow modification
+        $str =~ s#\\#\\\\#g;               # escape any escapes
+        return "[$str]";
+    }
+    else {
+        return
+          "[$_[0]]";    # Return the complete bracket parameter without escapes
+    }
+}
+
 1;
 __END__
 Foswiki - The Free and Open Source Wiki, http://foswiki.org/

~~~PATCH 69d038b822d92083af189037aa254dab  lib/Foswiki/Macros/MAKETEXT.pm (Foswiki-1.1.3 - Foswiki-1.1.6 Patched)
--- lib/Foswiki/Macros/MAKETEXT.pm	2012-12-10 00:04:59.830761183 -0500
+++ lib/Foswiki/Macros/MAKETEXT.pm	2012-12-10 16:58:03.651591792 -0500
@@ -9,13 +9,13 @@
   ( $Foswiki::cfg{UserInterfaceInternationalisation}
       && ( Locale::Maketext->VERSION() < 1.23 ) );
 
-my $max;
-my $min;
-my $param_error;
-
 sub MAKETEXT {
     my ( $this, $params ) = @_;
 
+    my $max;
+    my $min;
+    my $param_error;
+
     my $str = $params->{_DEFAULT} || $params->{string} || "";
     return "" unless $str;
 
@@ -32,12 +32,11 @@
     $param_error = 0;
 
     # unescape parameters and calculate highest parameter number:
-    $str =~ s/~\[(\_(\d+))~\]/_validate($1, $2)/ge;
-    $str =~ s/~\[(\*,\_(\d+),[^,]+(,([^,]+))?)~\]/ _validate($1, $2)/ge;
+    $str =~ s/~\[(\_(\d+))~\]/_validate($1, $2, $max, $min, $param_error)/ge;
+    $str =~
+s/~\[(\*,\_(\d+),[^,]+(,([^,]+))?)~\]/ _validate($1, $2, $max, $min, $param_error, $escape)/ge;
     return $str if ($param_error);
 
-    $str =~ s#\\#\\\\#g if $escape;
-
     # get the args to be interpolated.
     my $argsStr = $params->{args} || "";
 
@@ -62,19 +61,32 @@
 }
 
 sub _validate {
-    $max = $_[1] if ( $_[1] > $max );
-    $min = $_[1] if ( $_[1] < $min );
+
+    $_[2] = $_[1] if ( $_[1] > $_[2] );    # Record maximum param number
+    $_[3] = $_[1] if ( $_[1] < $_[3] );    # Record minimum param number
+
     if ( $_[1] > 100 ) {
-        $param_error = 1;
+        $_[4] = 1;                         # Set error flag
         return
-"<span class=\"foswikiAlert\">Excessive parameter number $max, MAKETEXT rejected.</span>";
+"<span class=\"foswikiAlert\">Excessive parameter number $_[2], MAKETEXT rejected.</span>";
     }
     if ( $_[1] < 1 ) {
-        $param_error = 1;
+        $_[4] = 1;                         # Set error flag
         return
 "<span class=\"foswikiAlert\">Invalid parameter <code>\"$_[0]\"</code>, MAKETEXT rejected.</span>";
     }
-    return "[$_[0]]";
+
+    if ( $_[5] ) {
+
+        # Escape any escapes.
+        my $str = $_[0];                   # copy to allow modification
+        $str =~ s#\\#\\\\#g;               # escape any escapes
+        return "[$str]";
+    }
+    else {
+        return
+          "[$_[0]]";    # Return the complete bracket parameter without escapes
+    }
 }
 
 1;

